
# Função para obter todos os projetos da API
"""def get_all_projects():
    response = requests.get(f"{base_url}/GetAllProjects")
    if response.status_code == 200:
        return response.json()
    return None

# Função para criar um novo projeto
def create_project(project_data):
    response = requests.post(f"{base_url}/CreateProjects", json=project_data)
    if response.status_code == 200:
        return response.json()
    return None

# Função para atualizar um projeto existente
def update_project(project_id, project_data):
    response = requests.put(f"{base_url}/GetProjectsId/{project_id}", json=project_data)
    if response.status_code == 200:
        return response.json()
    return None

# Função para excluir um projeto
def delete_project(project_id):
    response = requests.delete(f"{base_url}/DeleteProjects/{project_id}")
    if response.status_code == 200:
        return response.json()
    return None

# Página para listar todos os projetos
if st.button("Listar Projetos"):
    projects = get_all_projects()
    if projects:
        st.write("Lista de Projetos:")
        for project in projects:
            st.write(f"ID: {project['id_project']}, Nome: {project['name_project']}")
    else:
        st.write("Nenhum projeto encontrado.")

# Página para criar um novo projeto
if st.button("Criar Novo Projeto"):
    st.write("Criar Novo Projeto:")
    name_project = st.text_input("Nome do Projeto:")
    dt_last_run = st.date_input("Data da Última Execução:")
    fl_active = st.checkbox("Ativo", value=True)
    connection_origin1 = st.text_input("Conexão de Origem 1:")
    connection_origin2 = st.text_input("Conexão de Origem 2:")
    if st.button("Salvar"):
        new_project = {
            "name_project": name_project,
            "dt_last_run": dt_last_run.isoformat(),
            "fl_active": fl_active,
            "connection_origin1": connection_origin1,
            "connection_origin2": connection_origin2,
        }
        created_project = create_project(new_project)
        if created_project:
            st.write("Projeto criado com sucesso.")
        else:
            st.write("Erro ao criar o projeto.")

# Página para atualizar um projeto existente
if st.button("Atualizar Projeto"):
    project_id = st.number_input("ID do Projeto:")
    project = get_all_projects()
    if project_id and project_id in [p['id_project'] for p in projects]:
        project_data = {
            "name_project": st.text_input("Nome do Projeto:", value=project['name_project']),
            "dt_last_run": st.date_input("Data da Última Execução:", value=project['dt_last_run']),
            "fl_active": st.checkbox("Ativo", value=project['fl_active']),
            "connection_origin1": st.text_input("Conexão de Origem 1:", value=project['connection_origin1']),
            "connection_origin2": st.text_input("Conexão de Origem 2:", value=project['connection_origin2']),
        }
        if st.button("Salvar"):
            updated_project = update_project(project_id, project_data)
            if updated_project:
                st.write("Projeto atualizado com sucesso.")
            else:
                st.write("Erro ao atualizar o projeto.")
    else:
        st.write("ID do projeto inválido ou projeto não encontrado.")

# Página para excluir um projeto
if st.button("Excluir Projeto"):
    project_id = st.number_input("ID do Projeto:")
    if st.button("Excluir"):
        deleted_project = delete_project(project_id)
        if deleted_project:
            st.write("Projeto excluído com sucesso.")
        else:
            st.write("Erro ao excluir o projeto.")

"""

